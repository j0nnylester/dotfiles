#!/bin/bash

repos_folder=$1;
if [[ -z $repos_folder ]]; then
  printf "%-${width}s\n" "please provide a base folder to search for git repos"
  exit 1
fi

width=35
printf "%-${width}s %-5s" "finding repos..."
repos_list=$(find ~/Code/ -name .git -type d -prune | sed 's/.\{5\}$//')
printf "\r%-${width}s %-5s\n" "finding repos..." "done."

for repo in $repos_list
  do
    cd $repo
      if [[ $(git remote -v) != $no_remote ]]; then
        printf "%-${width}s %-11s" "$(basename $PWD)" "...fetching"
        git fetch --quiet
        printf "\r%-${width}s %-11s\n"  "$(basename $PWD)" "done."
      else
        printf "%-${width}s %-11s\n" "$(basename $PWD)" "no remote"
      fi
  done

 printf "\r%-${width}s %-11s\n"  "$(date '+%c')" "done."
 echo $(date '+%F_%H-%M-%S') > $repos_folder/.updated_at.txt